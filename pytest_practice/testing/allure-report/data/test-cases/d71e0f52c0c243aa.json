{
  "uid" : "d71e0f52c0c243aa",
  "name" : "test_div[错误样例]",
  "fullName" : "pytest_practice.testing.test_calculator_second.TestCalculator#test_div",
  "historyId" : "d7d08208b0e09262fd2433384de17781",
  "time" : {
    "start" : 1599554105463,
    "stop" : 1599554105464,
    "duration" : 1
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 3 == 2.0",
  "statusTrace" : "self = <pytest_practice.testing.test_calculator_second.TestCalculator object at 0x111912990>, get_cal = <pytest_practice.pythoncode.calculator.Calculator object at 0x1118a0710>, start_cal = None, get_div = [6, 3, 3]\n\n        @pytest.mark.div\n    #    @pytest.mark.run(order=3)\n        @pytest.mark.fourth\n        def test_div(self,get_cal,start_cal,get_div):\n            # 除数为0时，程序员需要进行异常处理，结果应该为空\n            if get_div[1] == 0:\n                result = None\n            else:\n                result = round(get_cal.div(get_div[0],get_div[1]),2)\n>           assert get_div[2] == result\nE           assert 3 == 2.0\n\ntest_calculator_second.py:23: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_div",
    "time" : {
      "start" : 1599554105463,
      "stop" : 1599554105463,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_cal",
    "time" : {
      "start" : 1599554105230,
      "stop" : 1599554105230,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "start_cal",
    "time" : {
      "start" : 1599554105462,
      "stop" : 1599554105463,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 3 == 2.0",
    "statusTrace" : "self = <pytest_practice.testing.test_calculator_second.TestCalculator object at 0x111912990>, get_cal = <pytest_practice.pythoncode.calculator.Calculator object at 0x1118a0710>, start_cal = None, get_div = [6, 3, 3]\n\n        @pytest.mark.div\n    #    @pytest.mark.run(order=3)\n        @pytest.mark.fourth\n        def test_div(self,get_cal,start_cal,get_div):\n            # 除数为0时，程序员需要进行异常处理，结果应该为空\n            if get_div[1] == 0:\n                result = None\n            else:\n                result = round(get_cal.div(get_div[0],get_div[1]),2)\n>           assert get_div[2] == result\nE           assert 3 == 2.0\n\ntest_calculator_second.py:23: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a3774f5cabd23aa7",
      "name" : "stdout",
      "source" : "a3774f5cabd23aa7.txt",
      "type" : "text/plain",
      "size" : 79
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "get_cal::0",
    "time" : {
      "start" : 1599554105468,
      "stop" : 1599554105469,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "start_cal::0",
    "time" : {
      "start" : 1599554105468,
      "stop" : 1599554105468,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "div"
  }, {
    "name" : "tag",
    "value" : "run(order=3)"
  }, {
    "name" : "tag",
    "value" : "fourth"
  }, {
    "name" : "parentSuite",
    "value" : "pytest_practice.testing"
  }, {
    "name" : "suite",
    "value" : "test_calculator_second"
  }, {
    "name" : "subSuite",
    "value" : "TestCalculator"
  }, {
    "name" : "host",
    "value" : "localhost"
  }, {
    "name" : "thread",
    "value" : "17558-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "pytest_practice.testing.test_calculator_second"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "get_div",
    "value" : "[6, 3, 3]"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "div", "run(order=3)", "fourth" ]
  },
  "source" : "d71e0f52c0c243aa.json",
  "parameterValues" : [ "[6, 3, 3]" ]
}